version: '2'

services:

  udp-packet-forwarder:
    
    # use pre-defined image
    image: rakwireless/udp-packet-forwarder:latest

    # or comment out image: and build it yourself / with balena services
    #build:
    #  context: .
    #  args:
    #    ARCH: amd64
    #    ARCH: aarch64

    container_name: udp-packet-forwarder
    restart: unless-stopped
    privileged: true
    network_mode: host      # required to read main interface MAC instead of virtual one, 
                            # you don't need this if you set the GATEWAY_EUI manually
    
    #volumes:
    #  - ./global_conf.json:/app/global_conf.json:ro
    
    environment:
      
      # To select your concentrator you have 3 options:
      # Option 1: set the MODEL to the device model number (i.e. RAK7371)
      # Option 2: set the MODEL to the concentrator model number (i.e. RAK5146)
      # Option 2: set the MODEL to the concentrator chip (i.e. SX1303)
      MODEL: "RAK7271"
      #MODEL: "RAK5146"
      #MODEL: "SX1303"

      # When using options 2 or 3 above, you will probably have to specify other features of the module.
      # These are the defaults:
      #INTERFACE: "ANY"
      #HAS_GPS: "0"
      #HAS_LTE: "0"
      
      # GPIO to reset SPI concentrators
      #USE_LIBGPIOD: 0 # set to 1 by default for Raspberry Pi 5
      #GPIO_CHIP: gpiochip0 # set to "gpiochip4" by default for Raspberry Pi 5
      #RESET_GPIO: 17
      #POWER_EN_GPIO: 0
      #POWER_EN_LOGIC: 0

      # SPI speed is automatically set depending on the concentrator,
      # but should you have any trouble you can change it like this:
      #SPI_SPEED: 2000000

      # If you have the concentrator connected to a different port
      # than the default ones ("/dev/spidev0.0" for SPI, "/dev/ttyUSB0" or "/dev/ttyACM0" for USB) 
      # you can define it this way
      #RADIO_DEV: "/dev/spidev0.1"
      #RADIO_DEV: "/dev/ttyACM1"
      #RADIO_DEV: "AUTO"

      # Same for the GPS
      #GPS_DEV: "/dev/i2c-1"
      #GPS_DEV: "/dev/ttyUSB1"

      # The service will define the Gateway EUI based on a network interface: eth0, wlan0 or usb0.
      # If neither of these exist or you want it to use a different interface you can define the NIC this way.
      # If you want to use the CHIP ID instead, set this value to "chip".
      #GATEWAY_EUI_SOURCE: "chip"

      # You can also set a custom Gateway EUI (8 bytes in hex format).
      # This takes precedence over the previous setting
      #GATEWAY_EUI: "001CC2FFFE423A49"

      # The default LNS server is the European TTN server. 
      # If you still want to use TTN but a different region you can set it this way:
      #TTN_REGION: "au1"

      # Or you can set a completely different LNS server.
      #SERVER_HOST: lns.example.com
      #SERVER_PORT: 1700

      # The default frequency band is EU868, 
      # if your module uses a different band you have to select it here:
      #BAND: "cn_470_510"

      # If you want the gateway to report a specific lat/lon/alt you can set them this way:
      #GPS_LATITUDE: 41.42
      #GPS_LONGITUDE: 2.12
      #GPS_ALTITUDE: 0




